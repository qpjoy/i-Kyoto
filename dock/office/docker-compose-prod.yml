services:
  office-fe:
    container_name: qpjoy.office-fe
    build:
      context: ./fe
      dockerfile: Dockerfile.prod
    depends_on:
      - office-be
    ports:
      - 80:80 # assuming frontend is served on 80 after build (e.g., with nginx)
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - office

  office-be:
    container_name: qpjoy.office-be
    build:
      context: ./be
      dockerfile: Dockerfile.prod
    depends_on:
      - db
    ports:
      - 9101:3000
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - office

  db:
    image: postgres:latest
    container_name: qpjoy.office-postgres
    hostname: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pdf
      POSTGRES_HOST_AUTH_METHOD: "trust"
    volumes:
      - /qpjoy/data/pdf-postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - office

  pgadmin:
    image: dpage/pgadmin4
    container_name: qpjoy.office-pgadmin
    depends_on:
      - db
    ports:
      - 4904:4904
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 4904
      PGADMIN_LISTEN_ADDRESS: "0.0.0.0"
    volumes:
      - /qpjoy/data/pgadmin-data:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - office

  # Optional NGINX reverse proxy
  # nginx:
  #   image: nginx:alpine
  #   container_name: qpjoy.office-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./certs:/etc/nginx/certs:ro
  #   depends_on:
  #     - office-fe
  #     - office-be
  #   networks:
  #     - office
  #   restart: unless-stopped

volumes:
  pdf-postgres-data:
  pgadmin-data:

networks:
  office:
